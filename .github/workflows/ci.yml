name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency: "workflow-that-targets-the-motion-api"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/set-up-ci
      - run: npx prettier --check .
      - run: npm run lint -- --max-warnings 0

  test:
    concurrency: "job-that-targets-the-motion-api"
    strategy:
      max-parallel: 1
      matrix:
        node-version: [18.18.0, 20, 22, 23]

    env:
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      REDIS_USER: ${{ secrets.REDIS_USER }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      MOTION_USER_ID: ${{ secrets.MOTION_USER_ID }}
      MOTION_API_KEY: ${{ secrets.MOTION_API_KEY }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/set-up-ci
        with:
          node-version: ${{ matrix.node-version }}

      # Node 20+
      - run: npm test
        if: ${{ matrix.node-version != '18.18.0' }}
      - run: npm run test:live
        if: ${{ matrix.node-version != '18.18.0' }}

        # Node 18
      - run: npm run test:node18
        if: ${{ matrix.node-version == '18.18.0' }}
      - run: npm run test:live:node18
        if: ${{ matrix.node-version == '18.18.0' }}

      - run: sleep 60

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/set-up-ci
      - run: npm run build
      - run: npx api-extractor run
      - run: npx api-documenter generate -i docs/input -o docs/ci-generated
      - run: diff --recursive --brief docs/markdown docs/ci-generated

  release-dry-run:
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_PUBLISH_KEY }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - uses: ./.github/actions/set-up-ci
      - name: Configure NPM auth
        run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
      - run: npm publish --dry-run
      - run: npm run release -- --dry-run
